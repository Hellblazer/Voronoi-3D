package mesh.polyhedra.sphere;

import javax.vecmath.Vector3d;

import mesh.polyhedra.Polyhedron;

/**
 * An approximate sphere created by projecting the vertices of a Goldberg
 * polyhedron to the sphere of desired circumradius. The Goldberg polyhedron is
 * generated by taking the dual polyhedron of an icosphere generated with the
 * given number of face subdivisions.
 *
 * @author Brian Yao
 */
public class Goldberg extends Polyhedron {

    /**
     * Generate a Goldberg polyhedron whose vertices are projected to the sphere
     * of given circumradius and is the dual polyhedron of the icosphere with
     * the given number of subdivisions.
     *
     * @param circumradius
     *            The distance of vertices from the origin.
     * @param subdivisions
     *            The number of subdivisions in the icosphere.
     */
    public Goldberg(double circumradius, int subdivisions) {
        Polyhedron ico = new Icosphere(circumradius, subdivisions);
        Polyhedron goldberg = ico.dual();
        // Scale all vertices onto the sphere
        for (Vector3d vertexPos : goldberg.getVertexPositions()) {
            vertexPos.scale(circumradius / vertexPos.length());
            addVertexPosition(vertexPos);
        }
        addFaces(goldberg.getFaces());
        setVertexNormalsToFaceNormals();
    }

}
